on:
  push:
    branches:
      - '**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - 'extras/**'
      - .dockerignore
      - .gitignore
      - CHANGELOG.md
      - Dockerfile
      - LICENSE
      - README.md

jobs:
  # build_macos:
    # runs-on: macos-10.15
    # steps:
      # - uses: actions/checkout@v2
        # with:
          # fetch-depth: 0
      # - uses: seanmiddleditch/gha-setup-ninja@master
      # - run: |
          # echo "JAVA_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
          # echo "$JAVA_HOME_11_X64/bin" >> $GITHUB_PATH
      # - run: python3 script/build.py
      # - run: python3 script/test.py
      # - run: python3 script/package_platform.py
      # - uses: actions/upload-artifact@v2
        # with:
          # name: macos-x64-jars
          # path: target/skija-macos-x64-*.jar
      # - run: python3 script/clean.py
      # - run: python3 script/build.py --arch arm64
      # - run: python3 script/package_platform.py --arch arm64
      # - uses: actions/upload-artifact@v2
        # with:
          # name: macos-arm64-jars
          # path: target/skija-macos-arm64-*.jar

  # build_linux:
    # runs-on: ubuntu-20.04
    # steps:
      # - run: |
          # echo "JAVA_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
          # echo "$JAVA_HOME_11_X64/bin" >> $GITHUB_PATH
          # sudo apt-get --quiet --yes install ninja-build libglu1-mesa-dev
          # sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9
          # sudo update-alternatives --config gcc
      # - uses: actions/checkout@v2
        # with:
          # fetch-depth: 0
      # - run: python3 script/build.py
      # - run: python3 script/package_shared.py
      # - uses: actions/upload-artifact@v2
        # with:
          # name: shared-jars
          # path: target/skija-shared-*.jar
      # - run: python3 script/test.py
      # - run: python3 script/package_platform.py
      # - uses: actions/upload-artifact@v2
        # with:
          # name: linux-jars
          # path: target/skija-linux-*.jar

  build_windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: microsoft/setup-msbuild@v1
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: seanmiddleditch/gha-setup-ninja@master
      - shell: bash
        run: |
          echo "JAVA_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
          echo "$JAVA_HOME_11_X64/bin" >> $GITHUB_PATH
      - run: python3 script/build.py
      - shell: bash
        run: python3 script/test.py
      - run: python3 script/package_platform.py
      - uses: actions/upload-artifact@v2
        with:
          name: windows-jars
          path: target/skija-windows-*.jar

  # release:
    # if: startsWith(github.ref, 'refs/tags/')
    # runs-on: ubuntu-latest
    # needs: [build_windows, build_linux, build_macos]
    # steps:
      # - uses: actions/checkout@v2
      # - run: |
          # echo "JAVA_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
          # echo "$JAVA_HOME_11_X64/bin" >> $GITHUB_PATH
      # - uses: actions/download-artifact@v2
        # with:
          # name: shared-jars
          # path: target
      # - uses: actions/download-artifact@v2
        # with:
          # name: macos-x64-jars
          # path: target
      # - uses: actions/download-artifact@v2
        # with:
          # name: macos-arm64-jars
          # path: target
      # - uses: actions/download-artifact@v2
        # with:
          # name: linux-jars
          # path: target
      # - uses: actions/download-artifact@v2
        # with:
          # name: windows-jars
          # path: target
      # - name: Release to Maven Central
        # run: |
          # echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
          # python3 ./script/release.py
        # env:
          # GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          # OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          # OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
